{"ast":null,"code":"var _jsxFileName = \"/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\nimport eventImage from './components/img/mockEvent1.png';\nimport locationIcon from './components/img/location-icon.png';\nimport timeIcon from './components/img/time-icon.png';\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvent = {\n  id: '1',\n  title: \"Exploring Banff National Park\",\n  image: eventImage,\n  location: \"Banff National Park\",\n  host: \"AMC Worcester 3RD\",\n  dateTime: \"Wed, Feb 21 - 6:30 PM EST\",\n  details: \"Join us for a hike through the beautiful Banff National Park. We will be exploring the trails and taking in the breathtaking views. This event is open to all skill levels. We hope to see you there!\",\n  going: 8,\n  price: \"Free\"\n};\nconst EventExpand = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-expand\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"event1-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event1-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hosted-by-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: eventImage,\n          alt: \"user-pfp\",\n          className: \"pfp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hosted-by-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hosted-by\",\n            children: \"Hosted By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"event1-host\",\n            children: event.host\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event1-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: eventImage,\n        alt: event.title,\n        className: \"event1-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event1-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event1-date-time\",\n          children: event.dateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event1-location\",\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EventExpand, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventExpand;\nexport default EventExpand;\nvar _c;\n$RefreshReg$(_c, \"EventExpand\");","map":{"version":3,"names":["React","useParams","Link","eventImage","locationIcon","timeIcon","jsxDEV","_jsxDEV","mockEvent","id","title","image","location","host","dateTime","details","going","price","EventExpand","_s","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js"],"sourcesContent":["import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\nimport eventImage from './components/img/mockEvent1.png';\nimport locationIcon from './components/img/location-icon.png';\nimport timeIcon from './components/img/time-icon.png';\n\n\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nconst mockEvent = {\n  id: '1',\n  title: \"Exploring Banff National Park\",\n    image: eventImage,\n    location: \"Banff National Park\",\n    host: \"AMC Worcester 3RD\",\n    dateTime: \"Wed, Feb 21 - 6:30 PM EST\",\n    details: \"Join us for a hike through the beautiful Banff National Park. We will be exploring the trails and taking in the breathtaking views. This event is open to all skill levels. We hope to see you there!\",\n    going: 8,\n    price: \"Free\",\n};\n\n\nconst EventExpand = () => {\n  let { id } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return (\n    <div className=\"event-expand\">\n      <header className=\"event1-header\">\n      <h1 className=\"event1-title\">{event.title}</h1>\n      <div className=\"hosted-by-container\">\n        <img src={eventImage} alt='user-pfp' className=\"pfp\" />\n        <div className=\"hosted-by-text\">\n          <p className=\"hosted-by\">Hosted By</p>\n          <p className=\"event1-host\">{event.host}</p>\n        </div>\n      </div>\n    </header>\n      <div className=\"event1-body\">\n        <img src={eventImage} alt={event.title} className=\"event1-image\" />\n        <div className=\"event1-details\">\n        \n          <p className=\"event1-date-time\">{event.dateTime}</p>\n          <p className=\"event1-location\">{event.location}</p>\n        </div>\n        <p>{event.details}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default EventExpand;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}