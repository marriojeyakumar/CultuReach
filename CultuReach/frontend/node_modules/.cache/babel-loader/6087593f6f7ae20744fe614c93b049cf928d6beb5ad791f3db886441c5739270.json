{"ast":null,"code":"var _jsxFileName = \"/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/components/EventsDisplay.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './EventsDisplay.css';\nimport appLogo from './img/mockEvent1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvents = [{\n  title: \"Exploring Banff National Park\",\n  image: \"path-to-banff-park-image.jpg\",\n  place: \"Banff National Park\",\n  host: \"AMC Worcester 3RD\",\n  time: \"Wed, Feb 21 - 6:30 PM EST\",\n  going: 8,\n  price: \"Free\"\n}, {\n  title: \"Second Gathering\",\n  image: \"path-to-gathering-image.jpg\",\n  place: \"Maynard Self Exploration Meetup Group\",\n  host: \"Maynard Group\",\n  time: \"Thu, Feb 15 - 7:30 PM EST\",\n  going: 2,\n  price: \"Free\"\n}];\nfunction EventsDisplay() {\n  const events = mockEvents.slice(0, 8);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.image,\n          alt: event.title,\n          className: \"event-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"event-title\",\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-host\",\n          children: [\"Hosted by: \", event.host]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-place\",\n          children: event.place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-time\",\n          children: event.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-attendance\",\n          children: [event.going, \" going\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-price\",\n          children: event.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"see-all-events\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        className: \"see-all-events-button\",\n        children: \"See all events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = EventsDisplay;\nexport default EventsDisplay;\nvar _c;\n$RefreshReg$(_c, \"EventsDisplay\");","map":{"version":3,"names":["React","Link","appLogo","jsxDEV","_jsxDEV","mockEvents","title","image","place","host","time","going","price","EventsDisplay","events","slice","className","children","map","event","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/components/EventsDisplay.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './EventsDisplay.css';\n\nimport appLogo from './img/mockEvent1.png'; \n\nconst mockEvents = [\n  {\n    title: \"Exploring Banff National Park\",\n    image: \"path-to-banff-park-image.jpg\",\n    place: \"Banff National Park\",\n    host: \"AMC Worcester 3RD\",\n    time: \"Wed, Feb 21 - 6:30 PM EST\",\n    going: 8,\n    price: \"Free\"\n  },\n  {\n    title: \"Second Gathering\",\n    image: \"path-to-gathering-image.jpg\",\n    place: \"Maynard Self Exploration Meetup Group\",\n    host: \"Maynard Group\",\n    time: \"Thu, Feb 15 - 7:30 PM EST\",\n    going: 2,\n    price: \"Free\"\n  },\n];\n\nfunction EventsDisplay() {\n  const events = mockEvents.slice(0, 8);\n\n  return (\n    <div className=\"events-display\">\n      <div className=\"grid\">\n        {events.map((event, index) => (\n          <div className=\"event-card\" key={index}>\n            <img src={event.image} alt={event.title} className=\"event-image\" />\n            <h3 className=\"event-title\">{event.title}</h3>\n            <p className=\"event-host\">Hosted by: {event.host}</p>\n            <p className=\"event-place\">{event.place}</p>\n            <p className=\"event-time\">{event.time}</p>\n            <p className=\"event-attendance\">{event.going} going</p>\n            <p className=\"event-price\">{event.price}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"see-all-events\">\n        <Link to=\"/events\" className=\"see-all-events-button\">See all events</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default EventsDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}