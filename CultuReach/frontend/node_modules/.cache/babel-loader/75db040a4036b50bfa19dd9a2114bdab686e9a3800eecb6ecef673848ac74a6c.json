{"ast":null,"code":"var _jsxFileName = \"/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvent = {\n  id: '1',\n  title: 'AMC Worcester 3RD',\n  host: 'Public group',\n  dateTime: 'Wednesday, February 21, 2024 at 6:30 PM to 8:30 PM EST',\n  image: 'path-to-your-event-image.jpg',\n  // Replace with path to your image.\n  location: 'Northborough Historical Society, 52 Main St · Northborough, MA',\n  details: `Let's chat! I'm hosting a low-key event to get to know you all a little better. During our Meet and Greet, we can discuss the emotional quagmires we may currently find ourselves in, create conversation about how best to make it through tough adjustments, or just chat about anything that might take our minds off real life for a little while. See you there!`\n};\nconst EventExpand = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-expand\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"event-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-host\",\n        children: event.host\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.image,\n        alt: event.title,\n        className: \"event-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-date-time\",\n          children: event.dateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-location\",\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EventExpand, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventExpand;\nexport default EventExpand;\nvar _c;\n$RefreshReg$(_c, \"EventExpand\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","mockEvent","id","title","host","dateTime","image","location","details","EventExpand","_s","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nconst mockEvent = {\n  id: '1',\n  title: 'AMC Worcester 3RD',\n  host: 'Public group',\n  dateTime: 'Wednesday, February 21, 2024 at 6:30 PM to 8:30 PM EST',\n  image: 'path-to-your-event-image.jpg', // Replace with path to your image.\n  location: 'Northborough Historical Society, 52 Main St · Northborough, MA',\n  details: `Let's chat! I'm hosting a low-key event to get to know you all a little better. During our Meet and Greet, we can discuss the emotional quagmires we may currently find ourselves in, create conversation about how best to make it through tough adjustments, or just chat about anything that might take our minds off real life for a little while. See you there!`,\n};\n\nconst EventExpand = () => {\n  let { id } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return (\n    <div className=\"event-expand\">\n      <header className=\"event-header\">\n        <h1 className=\"event-title\">{event.title}</h1>\n        <p className=\"event-host\">{event.host}</p>\n      </header>\n      <div className=\"event-body\">\n        <img src={event.image} alt={event.title} className=\"event-image\" />\n        <div className=\"event-details\">\n          <p className=\"event-date-time\">{event.dateTime}</p>\n          <p className=\"event-location\">{event.location}</p>\n          <p>{event.details}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventExpand;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,mBAAmB,CAAC,CAAC;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,mBAAmB;EAC1BC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,wDAAwD;EAClEC,KAAK,EAAE,8BAA8B;EAAE;EACvCC,QAAQ,EAAE,gEAAgE;EAC1EC,OAAO,EAAG;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAI;IAAER;EAAG,CAAC,GAAGJ,SAAS,CAAC,CAAC,CAAC,CAAC;EAC1B;EACA,MAAMa,KAAK,GAAGV,SAAS,CAAC,CAAC;;EAEzB,oBACED,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAQY,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC9Bb,OAAA;QAAIY,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEF,KAAK,CAACR;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CjB,OAAA;QAAGY,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEF,KAAK,CAACP;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACTjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBb,OAAA;QAAKkB,GAAG,EAAEP,KAAK,CAACL,KAAM;QAACa,GAAG,EAAER,KAAK,CAACR,KAAM;QAACS,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEjB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5Bb,OAAA;UAAGY,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEF,KAAK,CAACN;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDjB,OAAA;UAAGY,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEF,KAAK,CAACJ;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDjB,OAAA;UAAAa,QAAA,EAAIF,KAAK,CAACH;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CArBID,WAAW;EAAA,QACFX,SAAS;AAAA;AAAAsB,EAAA,GADlBX,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}