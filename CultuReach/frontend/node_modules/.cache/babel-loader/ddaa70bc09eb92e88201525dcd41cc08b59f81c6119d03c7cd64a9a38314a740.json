{"ast":null,"code":"var _jsxFileName = \"/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvent = {\n  id: '1',\n  title: 'Separation and Divorce Support - Meet and Greet',\n  host: 'Jake L.',\n  dateTime: '11 Feb 2024, 07:00 PM',\n  // Replace with path to your image.\n  details: `Let's chat! I'm hosting a low-key event to get to know you all a little better. During our Meet and Greet, we can discuss the emotional quagmires we may currently find ourselves in, create conversation about how best to make it through tough adjustments, or just chat about anything that might take our minds off real life for a little while. See you there!`,\n  tags: ['Single Parents', 'Marital Separation Support', 'Divorce Support']\n};\nconst EventExpand = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // Get the event ID from the URL\n\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-expand\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.image,\n        alt: event.title,\n        className: \"event-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"event-title\",\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-host\",\n          children: [\"Hosted By \", event.host]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-date-time\",\n          children: event.dateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-tags\",\n          children: event.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"event-tag\",\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-footer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/events\",\n        children: \"Back to events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(EventExpand, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventExpand;\nexport default EventExpand;\nvar _c;\n$RefreshReg$(_c, \"EventExpand\");","map":{"version":3,"names":["React","useParams","Link","jsxDEV","_jsxDEV","mockEvent","id","title","host","dateTime","details","tags","EventExpand","_s","event","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","index","to","_c","$RefreshReg$"],"sources":["/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js"],"sourcesContent":["import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nconst mockEvent = {\n  id: '1',\n  title: 'Separation and Divorce Support - Meet and Greet',\n  host: 'Jake L.',\n  dateTime: '11 Feb 2024, 07:00 PM',// Replace with path to your image.\n  details: `Let's chat! I'm hosting a low-key event to get to know you all a little better. During our Meet and Greet, we can discuss the emotional quagmires we may currently find ourselves in, create conversation about how best to make it through tough adjustments, or just chat about anything that might take our minds off real life for a little while. See you there!`,\n  tags: ['Single Parents', 'Marital Separation Support', 'Divorce Support']\n};\n\nconst EventExpand = () => {\n  let { id } = useParams(); // Get the event ID from the URL\n\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n  return (\n    <div className=\"event-expand\">\n      <div className=\"event-header\">\n        <img src={event.image} alt={event.title} className=\"event-image\" />\n        <div className=\"event-info\">\n          <h1 className=\"event-title\">{event.title}</h1>\n          <p className=\"event-host\">Hosted By {event.host}</p>\n          <p className=\"event-date-time\">{event.dateTime}</p>\n          <div className=\"event-tags\">\n            {event.tags.map((tag, index) => (\n              <span key={index} className=\"event-tag\">{tag}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"event-details\">\n        <p>{event.details}</p>\n      </div>\n      <div className=\"event-footer\">\n        <Link to=\"/events\">Back to events</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default EventExpand;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}