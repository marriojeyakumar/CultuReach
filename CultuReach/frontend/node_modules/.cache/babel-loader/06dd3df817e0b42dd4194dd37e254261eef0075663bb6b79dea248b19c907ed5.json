{"ast":null,"code":"var _jsxFileName = \"/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\nimport eventImage from './components/img/mockEvent1.png';\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockEvent = {\n  ititle: \"Exploring Banff National Park\",\n  image: mockEvent1,\n  place: \"Banff National Park\",\n  host: \"AMC Worcester 3RD\",\n  time: \"Wed, Feb 21 - 6:30 PM EST\",\n  going: 8,\n  price: \"Free\"\n};\nconst EventExpand = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-expand\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"event1-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event1-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event1-host\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: eventImage,\n          alt: \"user-pfp\",\n          className: \"pfp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), \"Hosted By \", event.host]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event1-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: eventImage,\n        alt: event.title,\n        className: \"event1-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event1-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event1-date-time\",\n          children: event.dateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event1-location\",\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(EventExpand, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventExpand;\nexport default EventExpand;\nvar _c;\n$RefreshReg$(_c, \"EventExpand\");","map":{"version":3,"names":["React","useParams","Link","eventImage","jsxDEV","_jsxDEV","mockEvent","ititle","image","mockEvent1","place","host","time","going","price","EventExpand","_s","id","event","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","dateTime","location","details","_c","$RefreshReg$"],"sources":["/Users/mnrj/src/cultureach/CultuReach/CultuReach/frontend/src/EventExpand.js"],"sourcesContent":["import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport './EventExpand.css'; // Make sure you create this CSS file // Make sure you create this image file\nimport eventImage from './components/img/mockEvent1.png';\n\n// Placeholder for mock data. You should fetch the actual data based on the event ID.\nconst mockEvent = {\n  ititle: \"Exploring Banff National Park\",\n  image: mockEvent1,\n  place: \"Banff National Park\",\n  host: \"AMC Worcester 3RD\",\n  time: \"Wed, Feb 21 - 6:30 PM EST\",\n  going: 8,\n  price: \"Free\",\n};\n\n\nconst EventExpand = () => {\n  let { id } = useParams(); // This hook allows you to grab the event ID from the URL\n  // TODO: Replace with logic to fetch event data based on `id`.\n  const event = mockEvent; // This is a placeholder\n\n  return (\n    <div className=\"event-expand\">\n      <header className=\"event1-header\">\n        <h1 className=\"event1-title\">{event.title}</h1>\n        <p className=\"event1-host\"> \n        <img src={eventImage} alt= 'user-pfp' className=\"pfp\" />\n        Hosted By {event.host}</p>\n      </header>\n      <div className=\"event1-body\">\n        <img src={eventImage} alt={event.title} className=\"event1-image\" />\n        <div className=\"event1-details\">\n          <p className=\"event1-date-time\">{event.dateTime}</p>\n          <p className=\"event1-location\">{event.location}</p>\n          <p>{event.details}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventExpand;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAO,mBAAmB,CAAC,CAAC;AAC5B,OAAOC,UAAU,MAAM,iCAAiC;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE,+BAA+B;EACvCC,KAAK,EAAEC,UAAU;EACjBC,KAAK,EAAE,qBAAqB;EAC5BC,IAAI,EAAE,mBAAmB;EACzBC,IAAI,EAAE,2BAA2B;EACjCC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE;AACT,CAAC;AAGD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAI;IAAEC;EAAG,CAAC,GAAGhB,SAAS,CAAC,CAAC,CAAC,CAAC;EAC1B;EACA,MAAMiB,KAAK,GAAGZ,SAAS,CAAC,CAAC;;EAEzB,oBACED,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAQc,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC/Bf,OAAA;QAAIc,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEF,KAAK,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/CpB,OAAA;QAAGc,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bf,OAAA;UAAKqB,GAAG,EAAEvB,UAAW;UAACwB,GAAG,EAAE,UAAU;UAACR,SAAS,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,cAC9C,EAACP,KAAK,CAACP,IAAI;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACTpB,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1Bf,OAAA;QAAKqB,GAAG,EAAEvB,UAAW;QAACwB,GAAG,EAAET,KAAK,CAACG,KAAM;QAACF,SAAS,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEpB,OAAA;QAAKc,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7Bf,OAAA;UAAGc,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEF,KAAK,CAACU;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDpB,OAAA;UAAGc,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEF,KAAK,CAACW;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDpB,OAAA;UAAAe,QAAA,EAAIF,KAAK,CAACY;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAvBID,WAAW;EAAA,QACFd,SAAS;AAAA;AAAA8B,EAAA,GADlBhB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}